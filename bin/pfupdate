#!/usr/bin/perl

=head1 pfupdate

Update configuration values to prevent some services to run on slave member

=cut

use constant INSTALL_DIR => '/usr/local/pf';
use lib INSTALL_DIR . "/lib";

use Getopt::Long;
use pf::ConfigStore::Pf();

my $mode;

GetOptions(
    "mode=s" => \$mode,
) ;

if (! ($mode =~ /^master|slave$/)) {
    exit;
}

my $pfcs = pf::ConfigStore::Pf->new();
my $maintenance = $pfcs->read('maintenance');

my $iplog_cleanup_interval = $maintenance->{'temporary_iplog_cleanup_interval'} || $maintenance->{'iplog_cleanup_interval'};
my $locationlog_cleanup_interval = $maintenance->{'temporary_locationlog_cleanup_interval'} || $maintenance->{'locationlog_cleanup_interval'};
my $node_cleanup_interval = $maintenance->{'temporary_node_cleanup_interval'} || $maintenance->{'node_cleanup_interval'};
my $traplog_cleanup_interval = $maintenance->{'temporary_traplog_cleanup_interval'} || $maintenance->{'traplog_cleanup_interval'};
my $nodes_maintenance_interval = $maintenance->{'temporary_nodes_maintenance_interval'} || $maintenance->{'nodes_maintenance_interval'};
my $violation_maintenance_interval = $maintenance->{'temporary_violation_maintenance_interval'} || $maintenance->{'violation_maintenance_interval'};
my $inline_accounting_maintenance_interval = $maintenance->{'temporary_inline_accounting_maintenance_interval'} || $maintenance->{'inline_accounting_maintenance_interval'};
my $acct_maintenance_interval = $maintenance->{'temporary_acct_maintenance_interval'} || $maintenance->{'acct_maintenance_interval'};
my $provisioning_compliance_poll_interval = $maintenance->{'temporary_provisioning_compliance_poll_interval'} || $maintenance->{'provisioning_compliance_poll_interval'};

if ($mode eq 'master') {

    $pfcs->update('maintenance', { iplog_cleanup_interval => $iplog_cleanup_interval, locationlog_cleanup_interval => $locationlog_cleanup_interval, node_cleanup_interval => $node_cleanup_interval, traplog_cleanup_interval =>  $traplog_cleanup_interval, nodes_maintenance_interval => $nodes_maintenance_interval, violation_maintenance_interval => $violation_maintenance_interval, inline_accounting_maintenance_interval => $inline_accounting_maintenance_interval, acct_maintenance_interval => $acct_maintenance_interval, provisioning_compliance_poll_interval => $provisioning_compliance_poll_interval});

} elsif ($mode eq 'slave') {

    $pfcs->update('maintenance', { iplog_cleanup_interval => '0', locationlog_cleanup_interval => '0', node_cleanup_interval => '0', traplog_cleanup_interval =>  '0', nodes_maintenance_interval => '0', violation_maintenance_interval => '0', inline_accounting_maintenance_interval => '0', acct_maintenance_interval => '0', provisioning_compliance_poll_interval => '0'});
    $pfcs->update('maintenance', { temporary_iplog_cleanup_interval => $iplog_cleanup_interval, temporary_locationlog_cleanup_interval => $locationlog_cleanup_interval, temporary_node_cleanup_interval => $node_cleanup_interval, temporary_traplog_cleanup_interval =>  $traplog_cleanup_interval, temporary_nodes_maintenance_interval => $nodes_maintenance_interval, temporary_violation_maintenance_interval => $violation_maintenance_interval, temporary_inline_accounting_maintenance_interval => $inline_accounting_maintenance_interval, temporary_acct_maintenance_interval => $acct_maintenance_interval, temporary_provisioning_compliance_poll_interval => $provisioning_compliance_poll_interval});

}

$pfcs->commit();
